plugins {
	id 'eclipse'
	id 'java-library'
	id 'com.github.johnrengelman.shadow' version "8.1.1"
}

repositories {
	mavenCentral()
	
	maven {
		url 'https://m2.dv8tion.net/releases'
	}
	maven {
		url "https://repo.spongepowered.org/maven/"
	}
}

sourceCompatibility = 19
targetCompatibility = 19

dependencies {
	shadow group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	shadow group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
	shadow group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
	shadow group: 'commons-io', name: 'commons-io', version: '2.13.0'
	shadow group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
	shadow group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.14'
	shadow ('net.dv8tion:JDA:5.0.0-beta.9')
	implementation ('net.dv8tion:JDA:5.0.0-beta.9')
	shadow group: 'com.thegamecommunity', name:'brigadier', version: 'TGC-1.3.0.0'
	implementation group: 'com.thegamecommunity', name:'brigadier', version: 'TGC-1.3.0.0'
	shadow group: 'mysql', name: 'mysql-connector-java', version: '8.0.33'
	shadow group: 'com.ezylang', name: 'EvalEx', version: '3.0.4'
	shadow group: 'com.google.guava', name: 'guava', version: '32.1.0-jre'
	
	/*
	* Testing
	*/
	
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.3'
	
}

shadowJar {
	mergeServiceFiles()
	configurations = [project.configurations.shadow]
	exclude 'META-INF/LICENSE'
	exclude 'META-INF/LICENSE.txt'
	exclude 'META-INF/LICENSsE.txt'
	exclude 'META-INF/NOTICE'
	exclude 'META-INF/NOTICE.txt'
	exclude 'META-INF/DEPENDENCIES'
	exclude 'LICENSE.txt'
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes(
			'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
			'MixinConfigs': 'mixins.json',
			'Main-Class': 'com.gamebuster19901.roll.Main',
			'Specification-Version': 8.0,
			'Multi-Release': 'true'
		)
	}
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	} {
		exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
	}
}
